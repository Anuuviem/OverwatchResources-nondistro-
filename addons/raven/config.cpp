// config.bin - 18:12:52 07/02/13, generated in 0.72 seconds
// Generated by unRap v1.06 by Kegetys
// Separate rootclasses: Disabled, Automatic comments: Enabled

#define private		0
#define protected		1
#define public		2

#define true	1
#define false	0

#define VSoft		0
#define VArmor		1
#define VAir		2

#define ReadAndWrite		0
#define ReadAndCreate		1
#define ReadOnly		2
#define ReadOnlyVerified		3

class CfgPatches {
	class MicroAirVehicles {
		units[] = {MAV_RQ11RAVEN, MAV_RQ11MONITOR, MAV_RQ11RAVEN_STATIC, "rq11_base_object", "rq11_zerlegt", "rq11_body", "rq11_camera", "rq11_paddle", "rq11_rotor", "rq11_tail", "rq11_wing_m", "rq11_wing_lr", MAV_RAVEN_BACKPACK};
		weapons[] = {};
		requiredVersion = 0.1;
		requiredAddons[] = {"CAAnimals", "CAWeapons_E", "CAData", "CABuildings2", "CABuildings", "CAMisc2", "CAMisc"};
	};
};

class cfgVehicleClasses {
	class rq11 {
		displayName = "[RQ-11] Raven Parts";
	};
	
	class mav_backpacks {
		displayName = "[RQ-11] Raven Backpacks";
	};
};

class CfgVehicles {
	class Thing;	// External class reference
	class RoadCone;	// External class reference
	
	class rq11_base_object : RoadCone {
		scope = protected;
		accuracy = 0.3;	// accuracy needed to recognize type of this target
		vehicleClass = "rq11";
		armor = 3;
	};
	
	class MAV_RQ11MONITOR : rq11_base_object {
		scope = public;
		Icon = "\raven\data\icon_MAVModule.paa";
		model = "\raven\rq11_monitor.p3d";
		displayName = "[GCS] Ground Control Station";
		vehicleClass = "rq11";
	};
	
	class MAV_RQ11RAVEN_STATIC : rq11_base_object {
		scope = public;
		Icon = "\raven\data\icon_MAVModule.paa";
		model = "\raven\rq_11.p3d";
		displayName = "[RQ-11] Raven (static)";
		vehicleClass = "rq11";
		
		class EventHandlers {
			init = "_this execVM (""\raven\scripts\init_staticRavenActions.sqf"")";
		};
	};
	
	class rq11_zerlegt : rq11_base_object {
		scope = public;
		Icon = "\raven\data\icon_MAVModule.paa";
		model = "\raven\raven_zerlegt.p3d";
		displayName = "[RQ-11] blanket with parts";
		vehicleClass = "rq11";
	};
	
	class carpet_empty : rq11_base_object {
		scope = public;
		Icon = "\raven\data\icon_MAVModule.paa";
		model = "\raven\carpet_empty.p3d";
		displayName = "[RQ-11] blanket without parts";
		vehicleClass = "rq11";
	};
	
	class rq11_body : rq11_base_object {
		scope = public;
		Icon = "\raven\data\icon_MAVModule.paa";
		model = "\raven\rq11_body.p3d";
		displayName = "[RQ-11] Raven Body";
		vehicleClass = "rq11";
	};
	
	class rq11_camera : rq11_base_object {
		scope = public;
		Icon = "\raven\data\icon_MAVModule.paa";
		model = "\raven\rq11_camera.p3d";
		displayName = "[RQ-11] Raven Camera Module";
		vehicleClass = "rq11";
		type = 4096;
	};
	
	class rq11_paddle : rq11_base_object {
		scope = public;
		Icon = "\raven\data\icon_MAVModule.paa";
		model = "\raven\rq11_paddle.p3d";
		displayName = "[RQ-11] Raven Elevator";
		vehicleClass = "rq11";
	};
	
	class rq11_rotor : rq11_base_object {
		scope = public;
		Icon = "\raven\data\icon_MAVModule.paa";
		model = "\raven\rq11_rotor.p3d";
		displayName = "[RQ-11] Raven Propeller";
		vehicleClass = "rq11";
	};
	
	class rq11_tail : rq11_base_object {
		scope = public;
		Icon = "\raven\data\icon_MAVModule.paa";
		model = "\raven\rq11_tail.p3d";
		displayName = "[RQ-11] Raven Tail";
		vehicleClass = "rq11";
	};
	
	class rq11_wing_m : rq11_base_object {
		scope = public;
		Icon = "\raven\data\icon_MAVModule.paa";
		model = "\raven\rq11_wing_m.p3d";
		displayName = "[RQ-11] Raven Wing Middle";
		vehicleClass = "rq11";
	};
	
	class rq11_wing_lr : rq11_base_object {
		scope = public;
		Icon = "\raven\data\icon_MAVModule.paa";
		model = "\raven\rq11_wing_lr.p3d";
		displayName = "[RQ-11] Raven Wing Ends";
		vehicleClass = "rq11";
	};
	class USBasicBag;	// External class reference
	class US_UAV_Pack_EP1;	// External class reference
	
	class MAV_RAVEN_BACKPACK : US_UAV_Pack_EP1 {
		scope = public;
		vehicleClass = "mav_backpacks";
		displayName = "[RQ-11] Raven Backpack";
		transportMaxMagazines = 0;
		transportMaxWeapons = 0;
		
		class EventHandlers {
			init = "[(_this select 0),'config','MAV_RAVEN_BACKPACK'] execVM '\z\addons\dayz_code\init\object_BackpackAction.sqf';_this execVM (""\raven\scripts\init_backpackAction.sqf"")";
		};
	};
};

class cfgNonAiVehicles {
	class Insect;	// External class reference
	class Bird;	// External class reference
	class Hawk;	// External class reference
	
	class MAV_RQ11RAVEN : Hawk {
		model = "\raven\rq_11.p3d";
		singSound[] = {"\raven\sounds\antiTamper.ogg", 1, 1, 1};
		canBeShot = true;
		minHeight = 30;
		avgHeight = 30.1;
		maxHeight = 150;
		moves = "";
		
		class EventHandlers {
			init = "_this execVM (""\raven\scripts\init_flyingRavenDamageInit.sqf"")";
			hit = "_this execVM (""\raven\scripts\init_staticRavenDamaged.sqf"")";
		};
	};
};

class CfgSounds {
	class propBuzz {
		name = "propBuzz";
		sound[] = {"\raven\sounds\propBuzz.ogg", db-25, 1.0};
		titles[] = {0, ""};
	};
	
	class antiTamper {
		name = "antiTamper";
		sound[] = {"\raven\sounds\antiTamper.ogg", db-15, 1.0};
		titles[] = {0, ""};
	};
	
	class watchBeep_alarm {
		name = "watchBeep_alarm";
		sound[] = {"\raven\sounds\watchBeep_alarm.ogg", db-25, 1.0};
		titles[] = {0, ""};
	};
	
	class prop_running02 {
		name = "prop_running02";
		sound[] = {"\raven\sounds\prop_running02.ogg", db-25, 1.0};
		titles[] = {0, ""};
	};
	
	class prop_startup02 {
		name = "prop_startup02";
		sound[] = {"\raven\sounds\prop_startup02.ogg", db-25, 1.0};
		titles[] = {0, ""};
	};
	
	class addTime {
		name = "addTime";
		sound[] = {"\raven\sounds\addTime.ogg", db-25, 1.0};
		titles[] = {0, ""};
	};
	
	class watchBeep_off {
		name = "watchBeep_off";
		sound[] = {"\raven\sounds\watchBeep_off.ogg", db-25, 1.0};
		titles[] = {0, ""};
	};
	
	class watchBeep_single {
		name = "watchBeep_single";
		sound[] = {"\raven\sounds\watchBeep_single.ogg", db-30, 1.0};
		titles[] = {0, ""};
	};
};

class MAVRscText {
	type = VSoft;
	idc = -1;
	style = 0;
	colorBackground[] = {0, 0, 0, 0};
	colorText[] = {1, 0, 0, 1};
	font = "Zeppelin33";
	sizeEx = 0.02;
	linespacing = 1;
	text = "";
	x = "SafeZoneX";
	y = "SafeZoneY";
	w = "SafeZoneW";
	h = "SafeZoneH";
};

class MAVRscStructuredText {
	access = ReadAndWrite;
	type = 13;
	idc = -1;
	style = 2 + 			16;
	lineSpacing = 1;
	w = 0.1;
	h = 0.05;
	size = "0.012 * SafeZoneH";
	colorBackground[] = {0, 0, 0, 0};
	colorText[] = {0, 0, 0, 0};
	text = "";
	font = "Zeppelin33";
	
	class Attributes {
		font = "Zeppelin33";
		color = "#FF0000";
		shadow = "false";
	};
};

class RscTitles {
	class MAV_RQ11_display {
		idd = 2020999;
		movingEnable = 1;
		duration = 500000;
		fadein = 0;
		fadeout = 0;
		name = "MAV_RQ11_display";
		onLoad = "uiNamespace setVariable ['d_MAV_RQ11_display', _this select 0]";
		
		class controls {
			class VerticalGridLines : MAVRscText {
				x = "safezoneX + 0 * safezoneW";
				y = "safezoneY + 0 * safezoneW";
				w = 0.002;
				h = "safezoneH";
				text = "";
				colorBackground[] = {1, 0, 0, 0.25};
			};
			
			class VerticalGridLines01 : VerticalGridLines {
				x = "safezoneX + 0.1 * safezoneW";
			};
			
			class VerticalGridLines02 : VerticalGridLines {
				x = "safezoneX + 0.2 * safezoneW";
			};
			
			class VerticalGridLines03 : VerticalGridLines {
				x = "safezoneX + 0.3 * safezoneW";
			};
			
			class VerticalGridLines04 : VerticalGridLines {
				x = "safezoneX + 0.4 * safezoneW";
			};
			
			class VerticalGridLines05 : VerticalGridLines {
				x = "safezoneX + 0.5 * safezoneW";
			};
			
			class VerticalGridLines06 : VerticalGridLines {
				x = "safezoneX + 0.6 * safezoneW";
			};
			
			class VerticalGridLines07 : VerticalGridLines {
				x = "safezoneX + 0.7 * safezoneW";
			};
			
			class VerticalGridLines08 : VerticalGridLines {
				x = "safezoneX + 0.8 * safezoneW";
			};
			
			class VerticalGridLines09 : VerticalGridLines {
				x = "safezoneX + 0.9 * safezoneW";
			};
			
			class VerticalGridLines10 : VerticalGridLines {
				x = "safezoneX + 1 * safezoneW";
			};
			
			class HorizontalGridLines : MAVRscText {
				x = "safezoneX + 0 * safezoneW";
				y = "safezoneY + 0 * safezoneW";
				w = "safezoneW";
				h = 0.002;
				text = "";
				colorBackground[] = {1, 0, 0, 0.25};
			};
			
			class HorizontalGridLines01 : HorizontalGridLines {
				y = "safezoneY + 0.1 * safezoneW";
			};
			
			class HorizontalGridLines02 : HorizontalGridLines {
				y = "safezoneY + 0.2 * safezoneW";
			};
			
			class HorizontalGridLines03 : HorizontalGridLines {
				y = "safezoneY + 0.3 * safezoneW";
			};
			
			class HorizontalGridLines04 : HorizontalGridLines {
				y = "safezoneY + 0.4 * safezoneW";
			};
			
			class HorizontalGridLines05 : HorizontalGridLines {
				y = "safezoneY + 0.5 * safezoneW";
			};
			
			class HorizontalGridLines06 : HorizontalGridLines {
				y = "safezoneY + 0.6 * safezoneW";
			};
			
			class HorizontalGridLines07 : HorizontalGridLines {
				y = "safezoneY + 0.7 * safezoneW";
			};
			
			class HorizontalGridLines08 : HorizontalGridLines {
				y = "safezoneY + 0.8 * safezoneW";
			};
			
			class HorizontalGridLines09 : HorizontalGridLines {
				y = "safezoneY + 0.9 * safezoneW";
			};
			
			class HorizontalGridLines10 : HorizontalGridLines {
				y = "safezoneY + 1 * safezoneW";
			};
			
			class MAVCompassNorth : MAVRscStructuredText {
				idc = 2020662;
				x = 0.5;
				y = 0.5;
				w = "safezoneW * 0.1";
				h = "safezoneH * 0.18";
				text = "north";
				colorBackground[] = {0, 0, 0, 0};
			};
			
			class MAVCompassSouth : MAVRscStructuredText {
				idc = 2020663;
				x = 0.5;
				y = 0.5;
				w = "safezoneW * 0.1";
				h = "safezoneH * 0.18";
				text = "south";
				colorBackground[] = {0, 0, 0, 0};
			};
			
			class MAVCompassWest : MAVRscStructuredText {
				idc = 2020664;
				x = 0.5;
				y = 0.5;
				w = "safezoneW * 0.1";
				h = "safezoneH * 0.18";
				text = "west";
				colorBackground[] = {0, 0, 0, 0};
			};
			
			class MAVCompassEast : MAVRscStructuredText {
				idc = 2020665;
				x = 0.5;
				y = 0.5;
				w = "safezoneW * 0.1";
				h = "safezoneH * 0.18";
				text = "east";
				colorBackground[] = {0, 0, 0, 0};
			};
			
			class MAVText : MAVRscStructuredText {
				idc = 2020666;
				x = "safezoneX + 0.8 * safezoneW";
				y = "safezoneY + 0.5 * safezoneW";
				w = "safezoneW * 0.1";
				h = "safezoneH * 0.18";
				text = "Loading Raven Info...";
				colorBackground[] = {0, 0, 0, 0.632};
			};
			
			class MAVKeyInfo : MAVRscStructuredText {
				idc = 2020667;
				x = "safezoneX + 0.1 * safezoneW";
				y = "safezoneY + 0.5 * safezoneW";
				w = "safezoneW * 0.1";
				h = "safezoneH * 0.18";
				text = "Loading Instructions...";
				colorBackground[] = {0, 0, 0, 0.632};
			};
			
			class MAVBattInfo : MAVRscStructuredText {
				idc = 2020668;
				x = "safezoneX + 0.1 * safezoneW";
				y = "safezoneY + 0.2 * safezoneW";
				w = "safezoneW * 0.1";
				h = "safezoneH * 0.04";
				text = "Loading Battery...";
				colorBackground[] = {0, 0, 0, 0.632};
			};
			
			class MAVClockInfo : MAVRscStructuredText {
				idc = 2020669;
				x = "safezoneX + 0.8 * safezoneW";
				y = "safezoneY + 0.2 * safezoneW";
				w = "safezoneW * 0.1";
				h = "safezoneH * 0.04";
				text = "Loading Clock...";
				colorBackground[] = {0, 0, 0, 0.632};
			};
		};
	};
};
